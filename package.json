{
  "name": "claude-mcp-server-ecosystem",
  "version": "0.11.0",
  "description": "Enterprise-grade MCP server ecosystem - Week 11 Complete: Data Management & Analytics",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "dev": "tsx watch src/index.ts",
    "start": "node dist/index.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:attention": "node tests/run-tests.js unit",
    "test:integration": "node tests/run-tests.js integration",
    "test:performance": "node tests/run-tests.js performance",
    "test:all": "node tests/run-tests.js all",
    "test:start-servers": "node tests/start-servers.js",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write src/**/*.ts",
    "clean": "rimraf dist",
    "_comment_week11": "=== Week 11: Data Analytics Server (COMPLETE) ===",
    "start:week-11": "concurrently \"npm run start:data-pipeline\" \"npm run start:realtime-analytics\" \"npm run start:data-warehouse\" \"npm run start:ml-deployment\" \"npm run start:data-governance\"",
    "start:data-pipeline": "tsx servers/data-analytics/src/data-pipeline.ts",
    "start:realtime-analytics": "tsx servers/data-analytics/src/realtime-analytics.ts",
    "start:data-warehouse": "tsx servers/data-analytics/src/data-warehouse.ts",
    "start:ml-deployment": "tsx servers/data-analytics/src/ml-deployment.ts",
    "start:data-governance": "tsx servers/data-analytics/src/data-governance.ts",
    "test:week-11": "jest --testPathPattern=servers/data-analytics",
    "test:data-pipeline": "jest servers/data-analytics/test/data-pipeline.test.ts",
    "test:realtime-analytics": "jest servers/data-analytics/test/realtime-analytics.test.ts",
    "test:data-warehouse": "jest servers/data-analytics/test/data-warehouse.test.ts",
    "test:ml-deployment": "jest servers/data-analytics/test/ml-deployment.test.ts",
    "test:data-governance": "jest servers/data-analytics/test/data-governance.test.ts",
    "health:week-11": "curl -s http://localhost:3011/health && curl -s http://localhost:3012/health && curl -s http://localhost:3013/health && curl -s http://localhost:3014/health && curl -s http://localhost:3015/health",
    "health:all": "node scripts/health-check-all.js",
    "status:week-11": "node scripts/status-week-11.js",
    "coverage:week-11": "jest --coverage --testPathPattern=servers/data-analytics",
    "_comment_week12": "=== Week 12: Advanced AI Integration (READY) ===",
    "setup:week-12": "node scripts/setup-week-12.js",
    "start:week-12": "echo 'Week 12 implementation ready - see docs/WEEK_12_PLAN.md'",
    "_comment_week14": "=== Week 14: Attention Mechanisms (COMPLETE) ===",
    "start:week-14": "concurrently \"npm run start:attention-pattern-analyzer\" \"npm run start:sparse-attention-engine\" \"npm run start:memory-efficient-attention\" \"npm run start:attention-visualization-engine\" \"npm run start:cross-attention-controller\"",
    "start:attention-pattern-analyzer": "tsx servers/attention-mechanisms/src/attention-pattern-analyzer.ts",
    "start:sparse-attention-engine": "tsx servers/attention-mechanisms/src/sparse-attention-engine.ts",
    "start:memory-efficient-attention": "tsx servers/attention-mechanisms/src/memory-efficient-attention.ts",
    "start:attention-visualization-engine": "tsx servers/attention-mechanisms/src/attention-visualization-engine.ts",
    "start:cross-attention-controller": "tsx servers/attention-mechanisms/src/cross-attention-controller.ts",
    "_comment_week15": "=== Week 15: Language Model Interface (COMPLETE) ===",
    "start:week-15": "concurrently \"npm run start:language-model-interface\" \"npm run start:inference-pipeline-manager\" \"npm run start:model-benchmarking-suite\" \"npm run start:model-integration-hub\"",
    "start:language-model-interface": "tsx servers/language-model/src/language-model-interface.ts",
    "start:inference-pipeline-manager": "tsx servers/language-model/src/inference-pipeline-manager.ts",
    "start:model-benchmarking-suite": "tsx servers/language-model/src/model-benchmarking-suite.ts",
    "start:model-integration-hub": "tsx servers/language-model/src/model-integration-hub.ts",
    "_comment_mcp": "=== MCP Enhancement Services ===",
    "start:mcp": "concurrently \"npm run start:memory-mcp\" \"npm run start:sequential-thinking\" \"npm run start:filesystem-mcp\"",
    "start:memory-mcp": "docker-compose up memory-mcp qdrant",
    "start:sequential-thinking": "docker-compose up sequential-thinking-mcp",
    "start:filesystem-mcp": "docker-compose up filesystem-mcp",
    "start:all-mcp": "docker-compose up qdrant memory-mcp sequential-thinking-mcp filesystem-mcp",
    "health:mcp": "curl -s http://localhost:3201/health && echo && curl -s http://localhost:3202/health && echo && curl -s http://localhost:3203/health && echo && curl -s http://localhost:6333/health",
    "health:week-14": "curl -s http://localhost:8000/health && echo && curl -s http://localhost:8001/health && echo && curl -s http://localhost:8002/health && echo && curl -s http://localhost:8004/health && echo && curl -s http://localhost:8005/health",
    "health:week-15": "curl -s http://localhost:8003/health && echo && curl -s http://localhost:8006/health && echo && curl -s http://localhost:8007/health && echo && curl -s http://localhost:8008/health",
    "stop:mcp": "docker-compose stop memory-mcp sequential-thinking-mcp filesystem-mcp qdrant",
    "_comment_demos": "=== Demonstration Scripts ===",
    "demo:week-11": "node examples/week-11-demo.js",
    "demo:data-pipeline": "node examples/data-pipeline-demo.js",
    "demo:realtime-analytics": "node examples/realtime-analytics-demo.js",
    "demo:data-warehouse": "node examples/data-warehouse-demo.js",
    "demo:ml-deployment": "node examples/ml-deployment-demo.js",
    "demo:data-governance": "node examples/data-governance-demo.js",
    "_comment_legacy": "=== Legacy Build Scripts (Weeks 1-10) ===",
    "build:orchestration": "tsc --project orchestration/tsconfig.json",
    "build:servers": "concurrently \"npm run build:inference\" \"npm run build:ui-testing\" \"npm run build:analytics\" \"npm run build:code-quality\" \"npm run build:documentation\" \"npm run build:memory\" \"npm run build:web-access\"",
    "build:inference": "tsc --project servers/inference-enhancement/tsconfig.json",
    "build:ui-testing": "tsc --project servers/ui-testing/tsconfig.json",
    "build:analytics": "tsc --project servers/analytics/tsconfig.json",
    "build:code-quality": "tsc --project servers/code-quality/tsconfig.json",
    "build:documentation": "tsc --project servers/documentation/tsconfig.json",
    "build:memory": "tsc --project servers/memory-management/tsconfig.json",
    "build:web-access": "tsc --project servers/web-access/tsconfig.json",
    "_comment_development": "=== Development Utilities ===",
    "setup:dev": "node scripts/setup-development.js",
    "verify:implementation": "node scripts/verify-week-11.js",
    "generate:docs": "typedoc --out docs/api src",
    "db:migrate": "node scripts/db-migrate.js",
    "db:seed": "node scripts/db-seed.js",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose -f docker-compose.simple.yml up -d",
    "docker:down": "docker-compose -f docker-compose.simple.yml down",
    "start-orchestration": "node scripts/start-orchestration.js",
    "configure:claude-desktop": "node scripts/configure-claude-desktop.js",
    "configure:claude-code": "node scripts/configure-claude-code.js"
  },
  "dependencies": {
    "@azure/storage-blob": "^12.15.0",
    "@google-cloud/storage": "^6.12.0",
    "aws-sdk": "^2.1429.0",
    "axios": "^1.6.7",
    "bcryptjs": "^2.4.3",
    "compression": "^1.8.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "elasticsearch": "^16.7.3",
    "etcd3": "^1.1.2",
    "eventemitter3": "^5.0.1",
    "express": "^4.21.2",
    "helmet": "^7.2.0",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "knex": "^3.1.0",
    "mongodb": "^5.7.0",
    "morgan": "^1.10.0",
    "node-cron": "^3.0.2",
    "pg": "^8.11.3",
    "redis": "^4.6.8",
    "rxjs": "^7.8.1",
    "uuid": "^9.0.0",
    "winston": "^3.17.0",
    "ws": "^8.13.0",
    "zod": "^3.22.4",
    "@modelcontextprotocol/sdk": "^0.5.0",
    "@qdrant/js-client-rest": "^1.7.0"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/chai": "^4.3.5",
    "@types/compression": "^1.7.2",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/mocha": "^10.0.1",
    "@types/morgan": "^1.9.4",
    "@types/node": "^20.5.0",
    "@types/node-cron": "^3.0.8",
    "@types/pg": "^8.10.2",
    "@types/uuid": "^9.0.2",
    "@types/ws": "^8.5.5",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.2.1",
    "chai": "^4.3.7",
    "concurrently": "^8.2.0",
    "eslint": "^8.46.0",
    "jest": "^29.7.0",
    "mocha": "^10.2.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.1",
    "rimraf": "^5.0.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.3.4",
    "ts-node": "^10.9.2",
    "tsx": "^3.12.7",
    "typedoc": "^0.24.8",
    "typescript": "^5.1.6"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "claude",
    "ai",
    "server",
    "data-analytics",
    "real-time",
    "ml-deployment",
    "data-governance",
    "enterprise",
    "week-11-complete"
  ],
  "author": "Claude Code Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/claude/mcp-server-ecosystem.git"
  },
  "bugs": {
    "url": "https://github.com/claude/mcp-server-ecosystem/issues"
  },
  "homepage": "https://github.com/claude/mcp-server-ecosystem#readme",
  "config": {
    "week": 11,
    "phase": "2-specialized-servers",
    "status": "week-11-complete",
    "next": "week-12-ai-integration",
    "progress": "33%"
  },
  "mcp": {
    "ecosystem": {
      "version": "0.11.0",
      "totalServers": 30,
      "weeklyComponents": 5,
      "currentWeek": 11,
      "totalWeeks": 33
    },
    "servers": {
      "data-pipeline": {
        "port": 3011,
        "file": "servers/data-analytics/src/data-pipeline.ts",
        "tools": [
          "register_data_source",
          "create_pipeline",
          "execute_pipeline",
          "get_pipeline_status"
        ],
        "status": "implemented",
        "week": 11
      },
      "realtime-analytics": {
        "port": 3012,
        "file": "servers/data-analytics/src/realtime-analytics.ts",
        "tools": [
          "create_stream",
          "start_stream",
          "stop_stream",
          "get_stream_metrics",
          "create_dashboard"
        ],
        "status": "implemented",
        "week": 11
      },
      "data-warehouse": {
        "port": 3013,
        "file": "servers/data-analytics/src/data-warehouse.ts",
        "tools": [
          "register_warehouse",
          "create_etl_job",
          "execute_etl_job",
          "get_warehouse_metrics",
          "get_etl_job_status"
        ],
        "status": "implemented",
        "week": 11
      },
      "ml-deployment": {
        "port": 3014,
        "file": "servers/data-analytics/src/ml-deployment.ts",
        "tools": [
          "register_model",
          "deploy_model",
          "predict",
          "undeploy_model",
          "get_model_metrics",
          "get_endpoint_status"
        ],
        "status": "implemented",
        "week": 11
      },
      "data-governance": {
        "port": 3015,
        "file": "servers/data-analytics/src/data-governance.ts",
        "tools": [
          "register_data_asset",
          "assess_data_quality",
          "create_data_policy",
          "evaluate_compliance",
          "monitor_data_access",
          "trace_data_lineage",
          "get_governance_metrics"
        ],
        "status": "implemented",
        "week": 11
      }
    }
  }
}
